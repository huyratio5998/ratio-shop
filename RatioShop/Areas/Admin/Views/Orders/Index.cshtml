@using RatioShop.Data.ViewModels.MyAccountViewModel
@using RatioShop.Enums
@using RatioShop.Helpers

@model ListOrderViewModel

@{
    ViewData["Title"] = "Order viewer";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
    var language = "vi-VN";
}

<h1>Order Viewer</h1>

<p>
    @*<span>
        <a asp-action="Create">Manual create order</a>
    </span>*@
    <span>
        <form asp-action="FilterOrder">
            <div class="form-control">
                <label for="orderNumber">Order Number:</label>
                <input type="text" name="orderNumber" id="orderNumber" value="@Model.FilterItems?.FirstOrDefault(x=>x.FieldName.Equals("OrderNumber"))?.Value" />

                <label for="orderStatus">Order Status:</label>
                <input type="text" name="orderStatus" id="orderStatus" value="@Model.FilterItems?.FirstOrDefault(x=>x.FieldName.Equals("Status"))?.Value" />

                <label for="paymentType">Payment:</label>
                <input type="text" name="paymentType" id="paymentType" value="@Model.FilterItems?.FirstOrDefault(x=>x.FieldName.Equals("PaymentType"))?.Value" />
            </div>

            <div class="form-control">

                <label for="shipmentStatus">Shipment Status:</label>
                <input type="text" name="shipmentStatus" id="shipmentStatus" value="@Model.FilterItems?.FirstOrDefault(x=>x.FieldName.Equals("ShipmentStatus"))?.Value" />

                <label for="sortType">Sort: </label>
                <select id="sortType" name="sortType">
                    @foreach (SortingEnum item in Enum.GetValues(typeof(SortingEnum)))
                    {
                        if (item == Model.SortType)
                        {
                            <option value="@item.ToString()" selected>@item.ToString()</option>
                        }
                        else
                        {
                            <option value="@item.ToString()">@item.ToString()</option>
                        }
                    }
                </select>

                <input type="hidden" name="page" value="1" />
                <input type="submit" value="Filter" />
            </div>

        </form>
    </span>
</p>

<div class="table-responsive">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    Order Number
                </th>
                <th>
                    Total Money
                </th>
                <th>
                    Order Status
                </th>
                <th>
                    Payment
                </th>
                <th>
                    Shipment Fee
                </th>
                <th>
                    Shipment Status
                </th>
                <th>
                    Created Date
                </th>
                <th>
                    Modified Date
                </th>
            </tr>
        </thead>
        <tbody>

            @if (Model.Orders != null && Model.Orders.Any())
            {

                @foreach (var order in Model.Orders)
                {
                    var item = order.Order;
                    var orderStatusBadgeClass = CommonHelper.GetStatusBadgeClass(item.Status, 5);
                    var shipmentStatusBadgeClass = CommonHelper.GetStatusBadgeClass(item.ShipmentStatus, 5);
                    var createdDateUTCFormat = item.CreatedDate.GetCorrectUTC()?.ToString("yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'");
                    var modifiedDateUTCFormat = item.ModifiedDate.GetCorrectUTC()?.ToString("yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fff'Z'");

                    <tr>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Id">
                                @Html.DisplayFor(modelItem => item.OrderNumber)
                            </a>
                        </td>
                        <td>
                            @CommonHelper.CurrencyFormat(item.TotalMoney, language)
                        </td>
                        <td>
                            <div class="badge rounded-pill @orderStatusBadgeClass">
                                @Html.DisplayFor(modelItem => item.Status)
                            </div>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Payment.DisplayName)
                        </td>
                        <td>
                            @CommonHelper.CurrencyFormat(item.ShipmentFee, language)
                        </td>
                        <td>
                            <div class="row" style="min-width:100px">
                                <div class="col-8">
                                    <div class="badge rounded-pill @shipmentStatusBadgeClass">
                                        @Html.DisplayFor(modelItem => item.ShipmentStatus)
                                    </div>
                                </div>
                                <div class="col-4">
                                    @if (order.AssignedShipper)
                                    {
                                        <a href="#" data-bs-toggle="tooltip" data-bs-placement="right" title="@order.ShipperName">
                                            <img src="~/images/icons/icon-shipper.png" style="height:20px" alt="shipper icon">
                                        </a>
                                    }
                                </div>
                            </div>
                        </td>
                        <td class="js_datetime-format-local" data-date-value="@createdDateUTCFormat">
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td class="js_datetime-format-local" data-date-value="@modifiedDateUTCFormat">
                            @Html.DisplayFor(modelItem => item.ModifiedDate)
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<partial name="_AdminGridPaging" model="Model" />
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
