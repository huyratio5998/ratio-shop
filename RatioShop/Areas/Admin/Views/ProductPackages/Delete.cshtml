@using RatioShop.Data.ViewModels;
@using RatioShop.Helpers
@model PackageViewModel

@{
    ViewData["Title"] = "Delete";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
    var language = "vi-VN";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Package</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Image)
        </dt>
        <dd class="col-sm-10">
            @if (string.IsNullOrEmpty(Model.Image))
            {
                <img src="~/images/default-placeholder.jpg" style="height:250px;width:auto" alt="package image" />
            }
            else
            {
                <img src="@Model.Image.ResolvePackageImages().FirstOrDefault()" style="height:250px;width:auto" alt="package image" class="js_img_changeTarget" />
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Code)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Code)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>       
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProductFriendlyName)
        </dd>
         <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>       
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            Price
        </dt>
        <dd class="col-sm-10">
            @(Model.ManualPrice != null && Model.ManualPrice >= 0
            ? CommonHelper.CurrencyFormat(Model.ManualPrice, language)
            : CommonHelper.CurrencyFormat(Model.AutoCalculatedPrice, language))
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DiscountRate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DiscountRate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsDelete)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsDelete)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsNew)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsNew)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsSoldOnline)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsSoldOnline)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ModifiedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ModifiedDate)
        </dd>
    </dl>

    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
